var search_data = {"index":{"searchIndex":["optionlist","optionlisttester","optiontest","array_spec()","fae()","hash_selections()","hash_spec()","new()","new()","new()","select()","symbolic_selection()","test()","test_that_it_does_not_munge_parms()","test_that_it_handles_good_options()","test_that_it_rejects_bad_selections()","test_that_it_rejects_bad_specs()","test_that_mandatory_parms_work()","test_that_the_methods_were_added()","test_that_the_select_block_works()","value_entry()","version()","version()","license"],"longSearchIndex":["optionlist","optionlisttester","optiontest","optionlist#array_spec()","optionlist#fae()","optionlist#hash_selections()","optionlist#hash_spec()","optionlist::new()","optionlisttester::new()","optiontest::new()","optionlist#select()","optionlist#symbolic_selection()","optiontest#test()","optionlisttester#test_that_it_does_not_munge_parms()","optionlisttester#test_that_it_handles_good_options()","optionlisttester#test_that_it_rejects_bad_selections()","optionlisttester#test_that_it_rejects_bad_specs()","optionlisttester#test_that_mandatory_parms_work()","optionlisttester#test_that_the_methods_were_added()","optionlisttester#test_that_the_select_block_works()","optionlist#value_entry()","optionlist#version()","optionlist::version()",""],"info":[["OptionList","","OptionList.html","","<p>The file option_list.rb and the class OptionList.\n<p>This file contains the code for the OptionList class …\n"],["OptionListTester","","OptionListTester.html","",""],["OptionTest","","OptionTest.html","",""],["array_spec","OptionList","OptionList.html#method-i-array_spec","(spec)","<p>Process an array spec that lists all the valid values for an option. See\nthe new method for more information …\n"],["fAE","OptionList","OptionList.html#method-i-fAE","(msg)","<p>Fail with an argument error.\n"],["hash_selections","OptionList","OptionList.html#method-i-hash_selections","(options, selected, dup)","<p>Process a hash of option selection values.\n<p>Parameters:\n<p>options - a hash of options to process.\n"],["hash_spec","OptionList","OptionList.html#method-i-hash_spec","(spec)","<p>Process a hash spec that lists only the default value for an option. See\nthe new method for more information …\n"],["new","OptionList","OptionList.html#method-c-new","(*option_specs, &select_block)","<p>Create an option list from an array of option specifications. These \nspecifications consist of a number …\n"],["new","OptionListTester","OptionListTester.html#method-c-new","(*all)",""],["new","OptionTest","OptionTest.html#method-c-new","(opt)",""],["select","OptionList","OptionList.html#method-i-select","(selections=[])","<p>From the possible options, select the actual, in force, options and return\nan access object for use in …\n"],["symbolic_selection","OptionList","OptionList.html#method-i-symbolic_selection","(option, selected, dup)","<p>Process a symbolic option selection.\n<p>Parameters:\n<p>option - a symbol to process.\n"],["test","OptionTest","OptionTest.html#method-i-test","(*args)",""],["test_that_it_does_not_munge_parms","OptionListTester","OptionListTester.html#method-i-test_that_it_does_not_munge_parms","()",""],["test_that_it_handles_good_options","OptionListTester","OptionListTester.html#method-i-test_that_it_handles_good_options","()",""],["test_that_it_rejects_bad_selections","OptionListTester","OptionListTester.html#method-i-test_that_it_rejects_bad_selections","()",""],["test_that_it_rejects_bad_specs","OptionListTester","OptionListTester.html#method-i-test_that_it_rejects_bad_specs","()",""],["test_that_mandatory_parms_work","OptionListTester","OptionListTester.html#method-i-test_that_mandatory_parms_work","()",""],["test_that_the_methods_were_added","OptionListTester","OptionListTester.html#method-i-test_that_the_methods_were_added","()",""],["test_that_the_select_block_works","OptionListTester","OptionListTester.html#method-i-test_that_the_select_block_works","()",""],["value_entry","OptionList","OptionList.html#method-i-value_entry","()","<p>Return a internal category marker constant for value entries.\n"],["version","OptionList","OptionList.html#method-i-version","()","<p>The option list code version. This is a redirect to the class method.\n"],["version","OptionList","OptionList.html#method-c-version","()","<p>The option list code version.\n"],["license","","license_txt.html","","<p>The MIT License (MIT).\n<p>Copyright © 2013 Peter Camilleri\n<p>Permission is hereby granted, free of charge, …\n"]]}}